node{
     
    stage('SCM Checkout'){
       git 'https://github.com/kanisara/spring-boot-maven-example-helloworld.git'
    }
    
    stage(" Maven Build"){
      def mavenHome =  tool name: "3.6.3", type: "maven"
      def mavenCMD = "${mavenHome}/bin/mvn"
      sh "${mavenCMD} clean package"
      
    }
    stage(" Quality control check"){
      def mavenHome =  tool name: "3.6.3", type: "maven"
      def mavenCMD = "${mavenHome}/bin/mvn"
      sh "${mavenCMD} sonar:sonar"
      
    }
    
    stage('Build Docker Image'){
        sh 'docker build -t kanisara/springbootmavenexample .'
    }
    
     stage('Push Docker Image'){
        withCredentials([string(credentialsId: 'Docker_Hub_Pwd', variable: 'Docker_Hub_Pwd')]) {
          sh "docker login -u kanisara -p ${Docker_Hub_Pwd}"
        }
        sh 'docker push kanisara/springbootmavenexample'
     }
     
     stage("Deploy To Kuberates Cluster"){
       sh 'kubectl apply -f springbootmavenexample.yml'
     }    
    
}


************  Docker file  *****

FROM tomcat:8.0.20-jre8
COPY target/SpringBootMavenExample-1.3.5.RELEASE.war /usr/local/tomcat/webapps/SpringBootMavenExample-1.3.5.RELEASE.war


********************** springbootmavenexample.yml


apiVersion: v1
kind: Pod
metadata:
  name: podspringbootmavenexample
  labels:
    appname: mavan
spec:
  containers:
    - name: springbootmavenexample-container
      image: kanisara/springbootmavenexample
      ports:
      - containerPort: 8080
...
---
apiVersion: v1
kind: Service
metadata:
  name: httpdnodeportservice
spec:
  selector:
    appname: mavan              #-- > Label of pod
  type: NodePort
  ports:
  - port: 80                    #--> Service Port
    targetPort: 8080              #--> Container Port
    nodePort: 30300
